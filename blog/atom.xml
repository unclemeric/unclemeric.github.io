<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FE-Blog</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-01-22T12:09:22.948Z</updated>
  <id>/</id>
  
  <author>
    <name>Meric Lai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="/2019/01/22/hello-world/"/>
    <id>/2019/01/22/hello-world/</id>
    <published>2019-01-22T12:09:22.948Z</published>
    <updated>2019-01-22T12:09:22.948Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vuex状态持久化存储之vuex-persistedstate</title>
    <link href="/2018/11/13/vuex-persistedstate/"/>
    <id>/2018/11/13/vuex-persistedstate/</id>
    <published>2018-11-13T07:09:26.000Z</published>
    <updated>2019-01-22T12:09:22.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vuex-persistedstate"><a href="#vuex-persistedstate" class="headerlink" title="vuex-persistedstate"></a>vuex-persistedstate</h1><p>Persist and rehydrate your <a href="http://vuex.vuejs.org/" target="_blank" rel="noopener">Vuex</a> state between page reloads.</p><hr><p><a href="https://travis-ci.org/robinvdvleuten/vuex-persistedstate" target="_blank" rel="noopener"><img src="https://img.shields.io/travis/robinvdvleuten/vuex-persistedstate.svg" alt="Build Status"></a><br><a href="https://www.npmjs.com/package/vuex-persistedstate" target="_blank" rel="noopener"><img src="https://img.shields.io/npm/v/vuex-persistedstate.svg" alt="NPM version"></a><br><a href="https://www.npmjs.com/package/vuex-persistedstate" target="_blank" rel="noopener"><img src="https://img.shields.io/npm/dm/vuex-persistedstate.svg" alt="NPM downloads"></a><br><a href="https://github.com/prettier/prettier" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg" alt="Prettier"></a><br><a href="https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE" target="_blank" rel="noopener"><img src="https://img.shields.io/github/license/robinvdvleuten/vuex-persistedstate.svg" alt="MIT license"></a></p><p><a href="http://makeapullrequest.com" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"></a><br><a href="https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/.github/code_of_conduct.md" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/code%20of-conduct-ff69b4.svg" alt="Code Of Conduct"></a></p><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul><li><a href="https://vuejs.org" target="_blank" rel="noopener">Vue.js</a> (v2.0.0+)</li><li><a href="http://vuex.vuejs.org" target="_blank" rel="noopener">Vuex</a> (v2.0.0+)</li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install vuex-persistedstate</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p><a href="https://codesandbox.io/s/80k4m2598?autoresize=1" target="_blank" rel="noopener"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit vuex-persistedstate"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createPersistedState <span class="keyword">from</span> <span class="string">'vuex-persistedstate'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  plugins: [createPersistedState()]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Nuxt-js"><a href="#Nuxt-js" class="headerlink" title="Nuxt.js"></a>Nuxt.js</h3><p>It is possible to use vuex-persistedstate with Nuxt.js. Due to the order code is loaded in, vuex-persistedstate must be included as a NuxtJS plugin:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nuxt.config.js</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">plugins: [&#123; <span class="attr">src</span>: <span class="string">'~/plugins/localStorage.js'</span>, <span class="attr">ssr</span>: <span class="literal">false</span> &#125;]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ~/plugins/localStorage.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> createPersistedState <span class="keyword">from</span> <span class="string">'vuex-persistedstate'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (&#123;store&#125;) =&gt; &#123;</span><br><span class="line">  <span class="built_in">window</span>.onNuxtReady(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    createPersistedState(&#123;</span><br><span class="line">        key: <span class="string">'yourkey'</span>,</span><br><span class="line">        paths: [...]</span><br><span class="line">        ...</span><br><span class="line">    &#125;)(store)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="createPersistedState-options"><a href="#createPersistedState-options" class="headerlink" title="createPersistedState([options])"></a><code>createPersistedState([options])</code></h3><p>Creates a new instance of the plugin with the given options. The following options<br>can be provided to configure the plugin for your specific needs:</p><ul><li><code>key &lt;String&gt;</code>: The key to store the persisted state under. (default: <strong>vuex</strong>)</li><li><code>paths &lt;Array&gt;</code>: An array of any paths to partially persist the state. If no paths are given, the complete state is persisted. (default: <strong>[]</strong>)</li><li><code>reducer &lt;Function&gt;</code>: A function that will be called to reduce the state to persist based on the given paths. Defaults to include the values.</li><li><p><code>subscriber &lt;Function&gt;</code>: A function called to setup mutation subscription. Defaults to <code>store =&gt; handler =&gt; store.subscribe(handler)</code></p></li><li><p><code>storage &lt;Object&gt;</code>: Instead for (or in combination with) <code>getState</code> and <code>setState</code>. Defaults to localStorage.</p></li><li><code>getState &lt;Function&gt;</code>: A function that will be called to rehydrate a previously persisted state. Defaults to using <code>storage</code>.</li><li><code>setState &lt;Function&gt;</code>: A function that will be called to persist the given state. Defaults to using <code>storage</code>.</li><li><code>filter &lt;Function&gt;</code>: A function that will be called to filter any mutations which will trigger <code>setState</code> on storage eventually. Defaults to <code>() =&gt; true</code></li><li><code>arrayMerger &lt;Function&gt;</code>: A function for merging arrays when rehydrating state. Defaults to <code>function (store, saved) { return saved }</code> (saved state replaces supplied state).</li></ul><h2 id="Customize-Storage"><a href="#Customize-Storage" class="headerlink" title="Customize Storage"></a>Customize Storage</h2><p>If it’s not ideal to have the state of the Vuex store inside localstorage. One can easily implement the functionality to use <a href="https://github.com/js-cookie/js-cookie" target="_blank" rel="noopener">cookies</a> for that (or any other you can think of);</p><p><a href="https://codesandbox.io/s/xl356qvvkz?autoresize=1" target="_blank" rel="noopener"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit vuex-persistedstate with js-cookie"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Store &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">import</span> createPersistedState <span class="keyword">from</span> <span class="string">'vuex-persistedstate'</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> Cookies <span class="keyword">from</span> <span class="string">'js-cookie'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Store(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  plugins: [</span><br><span class="line">    createPersistedState(&#123;</span><br><span class="line">      storage: &#123;</span><br><span class="line">        getItem: <span class="function"><span class="params">key</span> =&gt;</span> Cookies.get(key),</span><br><span class="line">        <span class="comment">// Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.</span></span><br><span class="line">        setItem: <span class="function">(<span class="params">key, value</span>) =&gt;</span></span><br><span class="line">          Cookies.set(key, value, &#123; <span class="attr">expires</span>: <span class="number">3</span>, <span class="attr">secure</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">        removeItem: <span class="function"><span class="params">key</span> =&gt;</span> Cookies.remove(key)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>In fact, any object following the Storage protocol (getItem, setItem, removeItem, etc) could be passed:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createPersistedState(&#123; <span class="attr">storage</span>: <span class="built_in">window</span>.sessionStorage &#125;)</span><br></pre></td></tr></table></figure><p>This is especially useful when you are using this plugin in combination with server-side rendering, where one could pass an instance of <a href="https://www.npmjs.com/package/dom-storage" target="_blank" rel="noopener">dom-storage</a>.</p><h3 id="⚠️-LocalForage-⚠️"><a href="#⚠️-LocalForage-⚠️" class="headerlink" title="⚠️ LocalForage ⚠️"></a>⚠️ LocalForage ⚠️</h3><p>As it maybe seems at first sight, it’s not possible to pass a <a href="https://github.com/localForage/localForage" target="_blank" rel="noopener">LocalForage</a> instance as <code>storage</code> property. This is due the fact that all getters and setters must be synchronous and <a href="https://github.com/localForage/localForage#callbacks-vs-promises" target="_blank" rel="noopener">LocalForage’s methods</a> are asynchronous.</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE" target="_blank" rel="noopener">MIT</a> © <a href="https://www.robinvdvleuten.nl" target="_blank" rel="noopener">Robin van der Vleuten</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vuex-persistedstate&quot;&gt;&lt;a href=&quot;#vuex-persistedstate&quot; class=&quot;headerlink&quot; title=&quot;vuex-persistedstate&quot;&gt;&lt;/a&gt;vuex-persistedstate&lt;/h1&gt;&lt;p&gt;Pe
      
    
    </summary>
    
    
      <category term="vue" scheme="/tags/vue/"/>
    
      <category term="vuex" scheme="/tags/vuex/"/>
    
      <category term="localstorage" scheme="/tags/localstorage/"/>
    
      <category term="plugins" scheme="/tags/plugins/"/>
    
  </entry>
  
  <entry>
    <title>layui-router项目介绍</title>
    <link href="/2018/10/31/layui-router/"/>
    <id>/2018/10/31/layui-router/</id>
    <published>2018-10-31T06:22:05.000Z</published>
    <updated>2019-01-22T12:09:22.949Z</updated>
    
    <content type="html"><![CDATA[<p>Layui 的路由版本。Layui 还有 iframe 版本，iframe 版特点是：</p><blockquote><ul><li>基于 iframe 标签页实现，简单实用</li><li>传统开发模式，撸起袖子直接开干</li><li>交互体验相比“单页版”略有点欠缺</li></ul></blockquote><p>路由版比较 iframe 版，有下列好处:</p><blockquote><ul><li>单页面应用方案，所有操作无需跳转</li><li>采用前后端分离开发模式，上手略难</li><li>更友好的交互体验，减轻浏览器负载</li></ul></blockquote><p>表面上最明显的特点就是浏览器地址栏，iframe 版 url 是这样:<br><img src="/blog/2018/10/31/layui-router/20181031143900.png"><br><img src="/blog/2018/10/31/layui-router/20181031144115.png"><br>不同的页面，地址栏居然一样？？？</p><p>另一边 router 版的是这样：<br><img src="/blog/2018/10/31/layui-router/20181031144844.png"><br><img src="/blog/2018/10/31/layui-router/20181031144909.png"><br>跟想象的一样，每个 url 对应不同的界面。</p><p>当我们按浏览器返回或者前进按钮时，iframe 版会出现问题，不能正确的返回或前进页面，而 router 版则没有这种问题。</p><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">├─json                          //模拟数据文件(相当于api接口列表)</span><br><span class="line">│  ├─layim</span><br><span class="line">│  ├─message</span><br><span class="line">│  ├─user</span><br><span class="line">│  └─workorder</span><br><span class="line">├─layui                         //layui资源文件(插件，里面代码无需理会)</span><br><span class="line">│  ├─css</span><br><span class="line">│  ├─font</span><br><span class="line">│  ├─images</span><br><span class="line">│  └─lay</span><br><span class="line">├─pages                         //页面相关文件</span><br><span class="line">│   ├─controller                //页面控制层</span><br><span class="line">│   ├─lib                       //插件文件</span><br><span class="line">│   │  └─extend</span><br><span class="line">│   ├─pro                       //layui框架文件(与router相关)</span><br><span class="line">│   ├─style                     //自定义样式文件</span><br><span class="line">│   │  └─res</span><br><span class="line">│   └─views                     //页面相关模块存放路径</span><br><span class="line">│       ├─app                   //app模块界面</span><br><span class="line">│       │  └─workorder</span><br><span class="line">│       ├─home                  //home主页模块界面</span><br><span class="line">│       ├─senior                //...</span><br><span class="line">│       ├─system                //...</span><br><span class="line">│       ├─template              //...</span><br><span class="line">│       ├─user                  //...</span><br><span class="line">│       ├─config.js             //项目相关配置文件</span><br><span class="line">│       └─index.js              //router功能代码</span><br><span class="line">└─index.html                    //index入口文件</span><br></pre></td></tr></table></figure><h3 id="路由执行过程"><a href="#路由执行过程" class="headerlink" title="路由执行过程"></a>路由执行过程</h3><img src="/blog/2018/10/31/layui-router/20181031161907.png"><h3 id="部分代码讲解"><a href="#部分代码讲解" class="headerlink" title="部分代码讲解"></a>部分代码讲解</h3><ul><li>路由跳转</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.hash = <span class="string">'/home/homepage1'</span></span><br></pre></td></tr></table></figure><ul><li>页面代码 page/views/home/homepage1.html：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>主页一<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-card layadmin-header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-breadcrumb"</span> <span class="attr">lay-filter</span>=<span class="string">"breadcrumb"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">""</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">cite</span>&gt;</span>主页一<span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-fluid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-row layui-col-space15"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-col-md4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-card"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-card-header"</span>&gt;</span>八卦新闻<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-card-body"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-carousel layadmin-carousel layadmin-dataview"</span> <span class="attr">data-anim</span>=<span class="string">"fade"</span> <span class="attr">lay-filter</span>=<span class="string">"LAY-index-pageone"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">carousel-item</span> <span class="attr">id</span>=<span class="string">"LAY-index-pageone"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"layui-icon layui-icon-loading1 layadmin-loading"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    layui.use(<span class="string">'sample'</span>, layui.factory(<span class="string">'sample'</span>));<span class="comment">//引入控制层/page/controller/simple.js</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>js 代码 /page/controller/simple.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">layui.define(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = layui.admin</span><br><span class="line">  layui.use([<span class="string">'admin'</span>, <span class="string">'carousel'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//渲染跑马灯</span></span><br><span class="line">    e(<span class="string">'.layadmin-carousel'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> l = e(<span class="keyword">this</span>)</span><br><span class="line">      a.render(&#123;</span><br><span class="line">        elem: <span class="keyword">this</span>,</span><br><span class="line">        width: <span class="string">'100%'</span>,</span><br><span class="line">        arrow: <span class="string">'none'</span>,</span><br><span class="line">        interval: l.data(<span class="string">'interval'</span>),</span><br><span class="line">        autoplay: l.data(<span class="string">'autoplay'</span>) === !<span class="number">0</span>,</span><br><span class="line">        trigger: t.ios || t.android ? <span class="string">'click'</span> : <span class="string">'hover'</span>,</span><br><span class="line">        anim: l.data(<span class="string">'anim'</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;),</span><br><span class="line">    <span class="comment">//渲染图表</span></span><br><span class="line">    layui.use([<span class="string">'carousel'</span>, <span class="string">'echarts'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      ...</span><br><span class="line">    &#125;),</span><br><span class="line">    e(<span class="string">'sample'</span>, &#123;&#125;)<span class="comment">//定义controller层名字</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>此 demo 中的各个插件的用法，由于模板是通过手工爬出来的，没有说明文档，但基本的 layui 用法和 iframe 类似，复杂的插件具体用到还需自行琢磨研究。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Layui 的路由版本。Layui 还有 iframe 版本，iframe 版特点是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;基于 iframe 标签页实现，简单实用&lt;/li&gt;
&lt;li&gt;传统开发模式，撸起袖子直接开干&lt;/li&gt;
&lt;li&gt;交互体验相比“单页版”略
      
    
    </summary>
    
    
      <category term="layui" scheme="/tags/layui/"/>
    
      <category term="router" scheme="/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli使用build命令编译css顺序错乱问题</title>
    <link href="/2018/10/26/vue-cli-load-css-confusion/"/>
    <id>/2018/10/26/vue-cli-load-css-confusion/</id>
    <published>2018-10-26T09:37:24.000Z</published>
    <updated>2019-01-22T12:09:22.959Z</updated>
    
    <content type="html"><![CDATA[<p>最近用 vue-cli 做一个项目引入了 bootstrap 的 css 本来是想组件内的 css 覆盖掉 bootstrap 的 css，但是打包了之后 bootstrpa 的 css 样式被打包到我所写样式的后面，原因是因为在 main.css 引入 bootstrap 顺序的原因</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><img src="/blog/2018/10/26/vue-cli-load-css-confusion/20181026174132.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近用 vue-cli 做一个项目引入了 bootstrap 的 css 本来是想组件内的 css 覆盖掉 bootstrap 的 css，但是打包了之后 bootstrpa 的 css 样式被打包到我所写样式的后面，原因是因为在 main.css 引入 bootstrap
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>VS Code 代码格式化配置</title>
    <link href="/2018/10/19/about-IDE-format-code/"/>
    <id>/2018/10/19/about-IDE-format-code/</id>
    <published>2018-10-19T07:10:43.000Z</published>
    <updated>2019-01-22T12:09:22.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>统一代码格式，美化代码。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>首先，vetur 默认设置是这个样的。也就是很多是用的 prettier 插件。<br>打开<code>文件 -&gt; 首选项 -&gt; 设置</code>的<code>用户设置</code>加入下列配置信息：<br><img src="/blog/2018/10/19/about-IDE-format-code/20181019154332.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&quot;git.autofetch&quot;: false,</span><br><span class="line">// 控制终端游标是否闪烁。</span><br><span class="line">&quot;terminal.integrated.cursorBlinking&quot;: true,</span><br><span class="line">&quot;editor.fontFamily&quot;: &quot;Consolas&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.css&quot;: &quot;prettier&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.postcss&quot;: &quot;prettier&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.scss&quot;: &quot;prettier&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.less&quot;: &quot;prettier&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.stylus&quot;: &quot;stylus-supremacy&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.js&quot;: &quot;prettier&quot;,</span><br><span class="line">&quot;vetur.format.defaultFormatter.ts&quot;: &quot;prettier&quot;,</span><br><span class="line">// &quot;[javascript]&quot;: &#123;</span><br><span class="line">//   &quot;editor.formatOnSave&quot;: true</span><br><span class="line">// &#125;,</span><br><span class="line">&quot;[css]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true</span><br><span class="line">&#125;,</span><br><span class="line">&quot;[scss]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true</span><br><span class="line">&#125;,</span><br><span class="line">&quot;[vue]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true</span><br><span class="line">&#125;,</span><br><span class="line">&quot;prettier.tabWidth&quot;: 2,</span><br><span class="line">//取消js单引号自动转换成双引号</span><br><span class="line">&quot;prettier.semi&quot;: false,</span><br><span class="line">&quot;prettier.singleQuote&quot;: true,</span><br><span class="line">&quot;[markdown]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">    &quot;editor.wordWrap&quot;: &quot;on&quot;,</span><br><span class="line">    &quot;editor.renderWhitespace&quot;: &quot;all&quot;,</span><br><span class="line">    &quot;editor.acceptSuggestionOnEnter&quot;: &quot;off&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编辑器配置"><a href="#编辑器配置" class="headerlink" title="编辑器配置"></a>编辑器配置</h2><p>在项目文件中新建<code>.editorconfig</code>文件<br>为特定类型指定缩进大小、缩进类型(空格或 tab)，是否自动插入末行等。<br><img src="/blog/2018/10/19/about-IDE-format-code/20181019154456.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># editorconfig.org</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line">[*]</span><br><span class="line">charset = utf-8</span><br><span class="line">indent_size = 4</span><br><span class="line">indent_style = space</span><br><span class="line">insert_final_newline = true</span><br><span class="line">trim_trailing_whitespace = true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*.md]</span><br><span class="line">trim_trailing_whitespace = false</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;统一代码格式，美化代码。&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配
      
    
    </summary>
    
    
      <category term="vs code" scheme="/tags/vs-code/"/>
    
      <category term="formatter" scheme="/tags/formatter/"/>
    
      <category term="setting" scheme="/tags/setting/"/>
    
  </entry>
  
  <entry>
    <title>FE-Blog项目说明</title>
    <link href="/2018/10/18/FE-Blog/"/>
    <id>/2018/10/18/FE-Blog/</id>
    <published>2018-10-18T00:39:32.000Z</published>
    <updated>2019-01-22T12:09:22.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本项目是一个交流与分享经验的博客，记录我们项目开发或者学习中积累的一些经验和技术，分享他人。<br>使用<code>Hexo</code>框架快速搭建。<code>Hexo</code> 是一个快速、简洁且高效的博客框架。<code>Hexo</code> 使用 <code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>相关知识技术请查看文档：<br>Hexo 官网文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 文档说明</a><br>Markdown 文档：<a href="http://www.markdown.cn/" target="_blank" rel="noopener">Markdown 文档说明</a></p><h2 id="hexo-theme-pure"><a href="#hexo-theme-pure" class="headerlink" title="hexo-theme-pure"></a>hexo-theme-pure</h2><p><code>Hexo</code>默认带的主题是<code>landscape</code>，但本项目使用<a href="https://github.com/cofess/hexo-theme-pure.git" target="_blank" rel="noopener"><code>hexo-theme-pure</code></a>(可点击)主题(此推荐使用<a href="https://hexo.io/zh-cn/docs/themes" target="_blank" rel="noopener">Hexo 主题使用</a>)，个人喜好。此项目由于<code>gitlab</code>上传失败自定义主题(反正我上传失败了…未知原因)，单单是自定义主题上传失败，系统默认主题成功上传了，所以提交的时候改为了<code>landscape</code>。有兴趣的同学可以<code>clone</code>下来之后，参照<a href="../../17/hexo-theme-pure"><code>Hexo-Theme-Pure</code></a>(可点击)这篇文章说明修改主题和相关主题功能配置。</p><h2 id="项目安装"><a href="#项目安装" class="headerlink" title="项目安装"></a>项目安装</h2><p>首先安装 hexo 构建工具(构建项目和页面使用)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g //安装全局命令</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install //安装全局命令</span><br></pre></td></tr></table></figure><h2 id="项目启动"><a href="#项目启动" class="headerlink" title="项目启动"></a>项目启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">or</span><br><span class="line">hexo s //hexo server的简写</span><br><span class="line">or</span><br><span class="line">npm start (package.json里自定义的启动脚本)</span><br></pre></td></tr></table></figure><p>项目启动完毕！</p><h2 id="ftp-一键发布"><a href="#ftp-一键发布" class="headerlink" title="ftp 一键发布"></a>ftp 一键发布</h2><p>自己写的一段代码使用<code>node</code>一键发布项目(懒人福利)，自带备份功能。通过配置一系列参数之后，执行自定义脚本<code>npm run deploy</code>。<br>相关文件包括：<br><code>app.js</code><br><code>sftp.config.js</code></p><h3 id="一键发布相关参数配置说明"><a href="#一键发布相关参数配置说明" class="headerlink" title="一键发布相关参数配置说明"></a>一键发布相关参数配置说明</h3><p>sftp.config.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&quot;path&quot;);</span><br><span class="line"></span><br><span class="line">//服务器项目根路径</span><br><span class="line">const remote_path = &quot;/data/webapps/hwagain-web/blog&quot;;</span><br><span class="line"></span><br><span class="line">//存放编译之后资源文件夹 此项目需同_config.yml的public_dir值一样 Vue项目为./dist</span><br><span class="line">const assets_path = path.resolve(__dirname, &quot;./public&quot;);</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  remote_path,</span><br><span class="line">  assets_path,</span><br><span class="line">  options: &#123;</span><br><span class="line">    host: &quot;192.168.68.207&quot;,//ftp服务器ip</span><br><span class="line">    port: &quot;22&quot;,//端口</span><br><span class="line">    user: &quot;portal&quot;,//ftp用户名</span><br><span class="line">    password: &quot;portal&quot;,//ftp密码</span><br><span class="line">    // privateKey: fs.readFileSync(&quot;C:/Users/laisf/.ssh/id_rsa&quot;), // 私钥</span><br><span class="line">    passphrase: &quot;&quot; // 私钥密码(为空)</span><br><span class="line">  &#125;,</span><br><span class="line">  project_remote_path: remote_path, //项目服务器路径</span><br><span class="line">  public_asset_path: assets_path //指定需要上传的文件夹目录</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="一键发布"><a href="#一键发布" class="headerlink" title="一键发布"></a>一键发布</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm run deploy (package.json里自定义的启动脚本)</span><br><span class="line">or</span><br><span class="line">/**</span><br><span class="line">* hexo clean: 清除缓存及上次编译生成的静态文件</span><br><span class="line">* hexo generate: 编译将博客生成静态文件</span><br><span class="line">* node app.js: 一键发布到ftp服务器</span><br><span class="line">*/</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;本项目是一个交流与分享经验的博客，记录我们项目开发或者学习中积累的一些经验和技术，分享他人。&lt;br&gt;使用&lt;code&gt;Hexo&lt;/code&gt;框
      
    
    </summary>
    
    
      <category term="blog" scheme="/tags/blog/"/>
    
      <category term="hexo" scheme="/tags/hexo/"/>
    
      <category term="hexo-theme" scheme="/tags/hexo-theme/"/>
    
      <category term="sftp" scheme="/tags/sftp/"/>
    
      <category term="一键发布" scheme="/tags/%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83/"/>
    
      <category term="node" scheme="/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Theme-Pure</title>
    <link href="/2018/10/17/hexo-theme-pure/"/>
    <id>/2018/10/17/hexo-theme-pure/</id>
    <published>2018-10-17T06:31:57.000Z</published>
    <updated>2019-01-22T12:09:22.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pure"><a href="#pure" class="headerlink" title="pure"></a>pure</h1><p>A brand new default theme for [<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>]. <a href="http://cofess.github.io/" target="_blank" rel="noopener">Preview</a> | <a href="README.md">English documentation</a> | <a href="http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html" target="_blank" rel="noopener">iconfont</a></p><p><img src="screenshot/pure.png" alt=""></p><h2 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h2><ul><li>多语言</li><li>第三方评论框（友言、来必力、gitment、gitalk）</li><li>可展示个人豆瓣书单</li><li>可展示个人 github 托管项目</li><li>可设置支付宝、微信打赏</li></ul><h2 id="页面展示"><a href="#页面展示" class="headerlink" title="页面展示"></a>页面展示</h2><p><a href="http://cofess.github.io/" target="_blank" rel="noopener">首页</a> | <a href="http://cofess.github.io/archives/" target="_blank" rel="noopener">归档</a> | <a href="http://cofess.github.io/categories/" target="_blank" rel="noopener">分类</a> | <a href="http://cofess.github.io/tags/" target="_blank" rel="noopener">标签</a> | <a href="http://cofess.github.io/repository/" target="_blank" rel="noopener">项目</a> | <a href="http://cofess.github.io/books/" target="_blank" rel="noopener">书单</a> | <a href="http://cofess.github.io/links/" target="_blank" rel="noopener">友链</a> | <a href="http://cofess.github.io/about/" target="_blank" rel="noopener">关于</a></p><h2 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/pure</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="启用-pure-主题"><a href="#启用-pure-主题" class="headerlink" title="启用 pure 主题"></a>启用 pure 主题</h2><p>打开站点配置文件，找到 theme 字段，将其值更改为 pure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: pure</span><br></pre></td></tr></table></figure><p>到此，主题安装完成。然后启动 Hexo 服务验证主题是否正确启用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a><a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-json-content"><a href="#hexo-generator-json-content" class="headerlink" title="hexo-generator-json-content"></a><a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">hexo-generator-sitemap</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-baidu-sitemap"><a href="#hexo-generator-baidu-sitemap" class="headerlink" title="hexo-generator-baidu-sitemap"></a><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="noopener">hexo-generator-baidu-sitemap</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\pure\languages 目录下语言文件，简体中文配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h3 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># config</span><br><span class="line">config:</span><br><span class="line">  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple</span><br></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 导航菜单</span><br><span class="line">menu:</span><br><span class="line">  Home: .</span><br><span class="line">  Archives: archives # 归档</span><br><span class="line">  Categories: categories # 分类</span><br><span class="line">  Tags: tags # 标签</span><br><span class="line">  Repository: repository # github repositories</span><br><span class="line">  Books: books     # 书单</span><br><span class="line">  Links: links # 友链</span><br><span class="line">  About: about # 关于</span><br><span class="line"></span><br><span class="line"># 导航菜单图标（font awesome）</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true # 是否启用菜单图标</span><br><span class="line">  home: icon-home-fill</span><br><span class="line">  archives: icon-archives-fill</span><br><span class="line">  categories: icon-folder</span><br><span class="line">  tags: icon-tags</span><br><span class="line">  repository: icon-project</span><br><span class="line">  books: icon-book-fill</span><br><span class="line">  links: icon-friendship</span><br><span class="line">  about: icon-cup-fill</span><br></pre></td></tr></table></figure><h3 id="设置个人信息"><a href="#设置个人信息" class="headerlink" title="设置个人信息"></a>设置个人信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头像在themes\pure\source\images 目录下替换图片即可，捐献的二维码同理。</span><br><span class="line"></span><br><span class="line">个人信息大部分都在 主题配置文件 中设置</span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Search</span><br><span class="line">search:</span><br><span class="line">  insight: true # you need to install `hexo-generator-json-content` before using Insight Search</span><br><span class="line">  swiftype: # enter swiftype install key here</span><br><span class="line">  baidu: false # you need to disable other search engines to use Baidu search</span><br></pre></td></tr></table></figure><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Share</span><br><span class="line"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class="line">share:</span><br><span class="line">  enable: true  # 是否启用分享</span><br><span class="line">  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标</span><br><span class="line">  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标</span><br></pre></td></tr></table></figure><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>主题集成了<a href="https://disqus.com/" target="_blank" rel="noopener">disqus</a>、<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言</a>、<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>、<a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>、<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">gitalk</a>评论系统，选择其中一种即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Comment</span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line">comment:</span><br><span class="line">  type: livere # 启用哪种评论系统</span><br><span class="line">  disqus:  # enter disqus shortname here</span><br><span class="line">  youyan:</span><br><span class="line">    uid: *** # enter youyan uid</span><br><span class="line">  livere:</span><br><span class="line">    uid: *** # enter livere uid</span><br><span class="line">  gitment:</span><br><span class="line">    githubID: username</span><br><span class="line">    repo: username.github.io</span><br><span class="line">    ClientID: ***</span><br><span class="line">    ClientSecret: ***</span><br><span class="line">    lazy: false</span><br></pre></td></tr></table></figure><h3 id="文章浏览量统计"><a href="#文章浏览量统计" class="headerlink" title="文章浏览量统计"></a>文章浏览量统计</h3><p>主题内置了不蒜子和 leancloud 来统计文章浏览量，启用其中之一即可，注意 leancloud 需要到其官网申请 APP ID 和 APP Key。</p><p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把 busuanzi 设置为 true 即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pv:</span><br><span class="line">  busuanzi:</span><br><span class="line">    enable: true  # 不蒜子统计</span><br></pre></td></tr></table></figure><p>如果不需要第三方来统计浏览量，只需将相应设置改为 false 即可（设置为 false 后不会加载第三方 JS 脚本）</p><h3 id="Github-respostory"><a href="#Github-respostory" class="headerlink" title="Github respostory"></a>Github respostory</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Github</span><br><span class="line">github:</span><br><span class="line">  username: ***  # github username</span><br></pre></td></tr></table></figure><h3 id="豆瓣书单"><a href="#豆瓣书单" class="headerlink" title="豆瓣书单"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># douban 豆瓣书单</span><br><span class="line">douban:</span><br><span class="line">  user: *** # 豆瓣用户名</span><br><span class="line">  start: 0 # 从哪一条记录开始</span><br><span class="line">  count: 100 # 获取豆瓣书单数据条数</span><br></pre></td></tr></table></figure><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p><p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p><p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p><p>单个友情链接的格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name:</span><br><span class="line">    link: http://example.com</span><br><span class="line">    avatar: http://example.com/avatar.png</span><br><span class="line">    desc: &quot;这是一个描述&quot;</span><br></pre></td></tr></table></figure><p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p><p>. 将 Name 改为友情链接的名字，例如 Cofess。</p><p>. <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a> 为友情链接的地址。</p><p>. <a href="http://example.com/avatar.png" target="_blank" rel="noopener">http://example.com/avatar.png</a> 为友情链接的头像。</p><p>. 这是一个描述 为友情链接描述。</p><h3 id="文章索引目录"><a href="#文章索引目录" class="headerlink" title="文章索引目录"></a>文章索引目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">toc: true # 是否启用内容索引</span><br></pre></td></tr></table></figure><h3 id="sidebar-侧边栏"><a href="#sidebar-侧边栏" class="headerlink" title="sidebar 侧边栏"></a>sidebar 侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">sidebar: none # 是否启用sidebar侧边栏，none：不启用</span><br></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a><a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a></h3><blockquote><p>auto Minify html、js、css and make it neat</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line">neat_enable: true</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.css&apos;</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.js&apos;</span><br></pre></td></tr></table></figure><h3 id="hexo-baidu-url-submit"><a href="#hexo-baidu-url-submit" class="headerlink" title="hexo-baidu-url-submit"></a><a href="https://github.com/huiwang/hexo-baidu-url-submit" target="_blank" rel="noopener">hexo-baidu-url-submit</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><h3 id="hexo-translate-title"><a href="#hexo-translate-title" class="headerlink" title="hexo-translate-title"></a><a href="https://github.com/cometlj/hexo-translate-title" target="_blank" rel="noopener">hexo-translate-title</a></h3><blockquote><p>使用 Google 翻译，百度翻译和有道翻译将 Hexo 中的汉字标题转成英文标题</p></blockquote><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate_title:</span></span><br><span class="line"><span class="attr">  translate_way:</span> <span class="string">google</span> <span class="comment">#google | baidu | youdao</span></span><br><span class="line"><span class="attr">  youdao_api_key:</span> <span class="string">XXX</span></span><br><span class="line"><span class="attr">  youdao_keyfrom:</span> <span class="string">XXX</span></span><br><span class="line"><span class="attr">  is_need_proxy:</span> <span class="literal">true</span> <span class="comment">#true | false</span></span><br><span class="line"><span class="attr">  proxy_url:</span> <span class="attr">http://localhost:8123</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：判断是否需要配置 google 本地代理，因为我在本地是开启时才能访问 google 翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为 false。如果设置为 true,请设置本地代理地址</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><blockquote><p>Hexo 默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签</p></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p><p>更换 Hexo 的 markdown 渲染引擎，<a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" target="_blank" rel="noopener">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a>即可。</p><h3 id="安装-hexo-renderer-markdown-it-plus-插件"><a href="#安装-hexo-renderer-markdown-it-plus-插件" class="headerlink" title="安装 hexo-renderer-markdown-it-plus 插件"></a>安装 hexo-renderer-markdown-it-plus 插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装插件后，如果未正常渲染 LaTeX 数学公式，在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">markdown_it_plus:</span><br><span class="line">  highlight: true</span><br><span class="line">  html: true</span><br><span class="line">  xhtmlOut: true</span><br><span class="line">  breaks: true</span><br><span class="line">  langPrefix:</span><br><span class="line">  linkify: true</span><br><span class="line">  typographer:</span><br><span class="line">  quotes: “”‘’</span><br><span class="line">  plugins:</span><br><span class="line">    - plugin:</span><br><span class="line">        name: markdown-it-katex</span><br><span class="line">        enable: true</span><br><span class="line">    - plugin:</span><br><span class="line">        name: markdown-it-mark</span><br><span class="line">        enable: false</span><br></pre></td></tr></table></figure><h3 id="文章启用-mathjax"><a href="#文章启用-mathjax" class="headerlink" title="文章启用 mathjax"></a>文章启用 mathjax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">mathjax: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pure&quot;&gt;&lt;a href=&quot;#pure&quot; class=&quot;headerlink&quot; title=&quot;pure&quot;&gt;&lt;/a&gt;pure&lt;/h1&gt;&lt;p&gt;A brand new default theme for [&lt;a href=&quot;https://hexo.io&quot; targe
      
    
    </summary>
    
    
      <category term="hexo-theme-pure" scheme="/tags/hexo-theme-pure/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目常见错误及解决方式</title>
    <link href="/2018/10/17/vue-template-error-collection/"/>
    <id>/2018/10/17/vue-template-error-collection/</id>
    <published>2018-10-17T03:47:43.000Z</published>
    <updated>2019-01-22T12:09:22.960Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装超时(install timeout)</li></ol><ul><li>cnpm : 国内对 npm 的镜像版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">// cnpm 的大多命令跟 npm 的是一致的,比如安装,卸载这些复制代码</span><br></pre></td></tr></table></figure><ul><li>yarn 和 npm 改源</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用 nrm 模块 : www.npmjs.com/package/nrm</span><br><span class="line">npm config : npm config set registry https:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line">yarn config : yarn config set registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><hr><ol start="2"><li>can’t not find ‘xxModule’ - 找不到某些依赖或者模块<blockquote><p>这种情况一般报错信息可以看到是哪个包抛出的信息.<br>一般卸载这个模块,安装重新安装下即可.</p></blockquote></li></ol><hr><ol start="3"><li>data functions should return an object<blockquote><p>这个问题是 Vue 实例内,单组件的 data 必须返回一个对象;如下</p></blockquote></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'page-router-view'</span>,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      tabs: [</span><br><span class="line">        &#123;</span><br><span class="line">          title: <span class="string">'帐号信息'</span>,</span><br><span class="line">          url: <span class="string">'/userinfo/base'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>为什么要 return 一个数据对象呢?<br>官方解释如下: data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！<br>简言之,组件复用下,不会造成数据同时指向一处,造出牵一发而动全身的问题</p></blockquote><ol start="4"><li>在函数内用了 this.xxx=,为什么抛出 Cannot set property ‘xxx’ of undefined;<blockquote><p>这又是 this 的套路了..this 是和当前运行的上下文绑定的…<br>一般你在 axios 或者其他 promise , 或者 setInterval 这些默认都是指向最外层的全局钩子.<br>简单点说:”最外层的上下文就是 window,vue 内则是 Vue 对象而不是实例!”;<br>解决方案:</p></blockquote></li></ol><blockquote><p>暂存法: 函数内先缓存 this , let that = this;(let 是 es6, es5 用 var)<br>箭头函数: 会强行关联当前运行区域为 this 的上下文;</p></blockquote><ol start="5"><li><p>Component template shold contain exactly one root element.If you are useing v-if on multiple elements , xxxxx</p><blockquote><p>单组件渲染 DOM 区域必须要有一个根元素,不能出现同级元素.可以用 v-if 和 v-else-if 指令来控制其他元素达到并存的状态<br>换个直白的解释,就是有一个唯一的父类,包裹者;<br>比如一个 div(父包含块) 内部多少个同级或者嵌套都行,但是最外层元素不能出现同级元素!!!!</p></blockquote></li><li><p>No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p></li></ol><ul><li>nginx 反向代理</li><li>webpack proxy 配置(开发环境下)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在 config 目录下的index.js</span></span><br><span class="line"></span><br><span class="line">proxyTable: &#123;</span><br><span class="line"> <span class="string">"/bp-api"</span>: &#123;</span><br><span class="line">   target: <span class="string">"http://new.d.st.cn"</span>,</span><br><span class="line">   changeOrigin: <span class="literal">true</span>,</span><br><span class="line">   <span class="comment">// pathRewrite: &#123;</span></span><br><span class="line">   <span class="comment">//   "^/bp-api": "/"</span></span><br><span class="line">   <span class="comment">// &#125;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改本地 host 文件 改成相同的二级域名例如 <code>xxx.hwagain.com</code></li><li>后台设置可跨域</li><li>jsonp，不过局限性比较多,比较适合一些特殊的信息获取!</li></ul><ol start="7"><li><p>Error in render function:”Type Error: Cannot read property ‘xxx’ of undefined”</p></li><li><p>Uncaught ReferenceError: xxx is not define</p></li><li><p>TypeError: xxx is not a function</p></li><li><p>安装模块时命令窗口输出 unsupported platform xxx</p><blockquote><p>一般两种情况,node 版本不兼容,系统不兼容;</p></blockquote></li><li><p>Failed to mount component: template or render function not defined</p></li></ol><ul><li>组件没有正确引入(或组件文件内容为空)</li><li>挂载点顺序错了</li></ul><ol start="12"><li><p>Unknown custom element: <code>&lt;xxx&gt;</code> - did you register the component correctly?</p><blockquote><p>组件未导入对应的组件或者组件引入了但是未在 components 声明注册</p></blockquote></li><li><p>axios 的 post 请求后台接受不到</p><blockquote><p>axios 默认是 json 格式提交,确认后台是否做了对应的支持;<br>若是只能接受传统的表单序列化,就需要自己写一个转义的方法.当然还有一个更加省事的方案,引入<code>qs</code>，使用<code>qs.stringify(params)</code>转义参数</p></blockquote></li><li><p>Module not found: Error : Can’t resolve xxx-loader in xxxx</p><blockquote><p>这里问题一般就是 webpack 的配置文件你改动了或对应的 loader 没有装上</p></blockquote></li><li><p>npm run dev 报端口错误!Error: listen EADDRINUSE :::8080</p><blockquote><p>端口被占用，在 config/index.js 修改开发环境下的端口号</p></blockquote></li><li><p>什么时候用 v-if,什么用 v-show</p><blockquote><p>我们先来说说两者的核心差异;<br>v-if : DOM 区域没有生成,没有插入文档..等条件成立的时候才动态插入到页面!<br>有些需要遍历的数组对象或者值,最好用这货控制,等到拿到值才处理遍历,不然一些操作过快的情况会报错,比如数据还没请求到!<br>v-show: DOM 区域在组件渲染的时候同时渲染了,只是单纯用 css 隐藏了<br>对于下拉菜单,折叠菜单这些数据基本不怎么变动.用这个最合适了..而且可以改善用户体验,因为它不会导致页面的重绘,DOM 操作会!<br>简言之: DOM 结构不怎么变化的用 v-show, 数据需要改动很大或者布局改动的用 v-if</p></blockquote></li><li><p>单组件中里面的 import xxx from ‘@/components/layout/xxx’中的@是什么</p><blockquote><p>webpack 可以配置 alias(也就是路径别名),<br>文件名: <code>build -&gt; webpack.base.conf.js</code></p></blockquote></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">resolve: &#123;</span><br><span class="line">    extensions: [<span class="string">".js"</span>, <span class="string">".vue"</span>, <span class="string">".json"</span>], <span class="comment">// 可以导入的时候忽略的拓展名范围</span></span><br><span class="line">    alias: &#123;</span><br><span class="line">      vue$: <span class="string">"vue/dist/vue.esm.js"</span>,</span><br><span class="line">      <span class="string">"@"</span>: resolve(<span class="string">"src"</span>),  <span class="comment">// 这里就是别名了,比如@就代表直接从/src 下开始找起!!!</span></span><br><span class="line">      <span class="string">"~"</span>: resolve(<span class="string">"src/components"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="18"><li>SyntaxError: Unexpected identifier;<blockquote><p>语法错误,看错误信息去找到对应的页面排查</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;安装超时(install timeout)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;cnpm : 国内对 npm 的镜像版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
    
      <category term="error" scheme="/tags/error/"/>
    
      <category term="vue" scheme="/tags/vue/"/>
    
      <category term="npm" scheme="/tags/npm/"/>
    
      <category term="webpack" scheme="/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Layui项目常见错误及解决方式</title>
    <link href="/2018/10/17/layui-template-error-collection/"/>
    <id>/2018/10/17/layui-template-error-collection/</id>
    <published>2018-10-17T02:46:37.000Z</published>
    <updated>2019-01-22T12:09:22.955Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>try running: npm install xxx</p><img src="/blog/2018/10/17/layui-template-error-collection/20181015155613.png" title="try running: npm install xxx"><blockquote><p>错误提示<code>try running: npm install gulp</code>，表示未安装相关依赖，按照提示执行命令安装相关依赖。</p></blockquote></li><li><p>layui.js:2 GET <a href="http://xxx/xx.xx" target="_blank" rel="noopener">http://xxx/xx.xx</a> net::ERR_ABORTED 404 (Not Found)</p><img src="/blog/2018/10/17/layui-template-error-collection/20181015164139.png" title="layui.js:2 GET http://xxx/xx.xx net::ERR_ABORTED 404 (Not Found)"><img src="/blog/2018/10/17/layui-template-error-collection/20181015164428.png"><blockquote><p>1.当页面显示异常或者自己觉得出错了，首先打开浏览器控制台 console（F12）查看有没有报错，然后根据报错去判断引发问题的每一个点。例如这个错误，按 F12 打开控制台,发现<code>console</code>报了两个错，一个是 js 的<code>404</code>错误，首先想一下在什么地方引入了<code>index1.js</code>这个文件，然后确定一下文件存不存在。打开<code>index.html</code>，可以看到引入了<code>index1</code>文件，然是左边文件夹里并没有这个文件，所以这个问题是由于文件名写错了。<br>2.有的人可能会发现图 1 的控制台报了两个错误，第一个可能知道是文件路径不对，但是第 2 个报错并不清楚是因为什么引起的。这里特别提醒找错误不要从下往上看，先解决第一个出现的错误，解决完刷新页面再看后面的错误，也不要纠结一定所有问题一次解决。这里我们把第一个问题解决之后，发现第二个问题是由于第一个问题引起的，解决了第一个问题第二个问题也没有再出现</p></blockquote></li><li><p>打包编译事项注意</p><blockquote><p>发布的时候注意 config.js 的两个变量<code>isProduction:false，isDevelopment:false</code>，测试环境的时候只需把<code>isDevelopment</code>改为<code>true</code>，正式环境只需把<code>isProduction</code>改为<code>true</code>，本地开发的时候把两个都设置成<code>false</code>。</p></blockquote></li></ol><blockquote><p>请求无法回数据或者返回失败，看看是不是未登录或者跨域问题。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;try running: npm install xxx&lt;/p&gt;
&lt;img src=&quot;/blog/2018/10/17/layui-template-error-collection/20181015155613.png&quot; title=&quot;try runni
      
    
    </summary>
    
    
      <category term="layui" scheme="/tags/layui/"/>
    
      <category term="javascript" scheme="/tags/javascript/"/>
    
      <category term="js" scheme="/tags/js/"/>
    
      <category term="error" scheme="/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>Use-Hacker-theme</title>
    <link href="/2018/10/17/use-Hacker-theme/"/>
    <id>/2018/10/17/use-Hacker-theme/</id>
    <published>2018-10-17T02:45:19.000Z</published>
    <updated>2019-01-22T12:09:22.958Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hacker-English-Docs"><a href="#Hacker-English-Docs" class="headerlink" title="Hacker | English Docs"></a>Hacker | <a href="/README.md">English Docs</a></h1><p><a href="https://github.com/ellerbrock/open-source-badge/" target="_blank" rel="noopener"><img src="https://badges.frapsoft.com/os/v1/open-source.svg?v=103" alt="Open Source Love"></a> <a href="https://opensource.org/licenses/GPL-2.0" target="_blank" rel="noopener"><img src="https://badges.frapsoft.com/os/gpl/gpl.svg?v=103" alt="GPL Licence"></a></p><p><strong>Hacker 是一款专注于写作的简洁博客主题。在如此讲究复杂排版的趋势下，选择回归本源，专注于写作这件事。</strong></p><p>一开始是<a href="http://liuxinyu.me/" target="_blank" rel="noopener">moyo</a>为 Wordpress 所创作的一个主题，由 DaraW 移植到 Hexo。</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>参考我的博客：<a href="http://blog.daraw.cn/" target="_blank" rel="noopener">DaraW</a></p><p><img src="https://ooo.0o0.ooo/2016/08/04/57a306f56bee2.png" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>获得主题文件， <code>git clone</code>或者<code>download zip</code>均可；</p><p>在<code>themes</code>文件夹中创建文件夹<code>Hacker</code>，将主题文件都复制粘贴至<code>Hacker</code>文件夹；</p><p>然后在 hexo 全局配置文件<code>_config.yml</code>中应用主题：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">Hacker</span></span><br></pre></td></tr></table></figure><p>这样就安装好了，开始享受吧~</p><p><strong>注意：版本更新后建议在 hexo 生成前执行一次<code>hexo clean</code>，清除以前的缓存，避免带来的一些莫名其妙的问题。</strong></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="启用评论和谷歌分析"><a href="#启用评论和谷歌分析" class="headerlink" title="启用评论和谷歌分析"></a>启用评论和谷歌分析</h3><p>在主题配置文件<code>_config.yml</code>中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitment</span></span><br><span class="line"><span class="attr">gitment:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">gitment_owner:</span></span><br><span class="line"><span class="attr">gitment_repo:</span></span><br><span class="line"><span class="attr">gitment_client_id:</span></span><br><span class="line"><span class="attr">gitment_client_secret:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># disqus comment</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># google analytics</span></span><br><span class="line"><span class="attr">googleTrackId:</span></span><br></pre></td></tr></table></figure><p><code>gitment</code>: <code>boolean</code>，是否开启 gitment 评论<br><code>gitment_owner</code>: <code>string</code>，你的 GitHub ID<br><code>gitment_repo</code>: <code>string</code>，存储评论的 repo<br><code>gitment_client_id</code>: <code>string</code>，你的 client ID<br><code>gitment_client_secret</code>: <code>string</code>，你的 client secret</p><p><code>disqus</code>: <code>boolean</code>，是否开启 disqus 评论；<br><code>disqus_shortname</code>: <code>string</code>，你的 disqus site shortname。</p><p><code>googleTrackId</code>: <code>string</code>，为谷歌分析的个人 ID，留空则为不使用谷歌分析。</p><h3 id="启用分类和标签页面"><a href="#启用分类和标签页面" class="headerlink" title="启用分类和标签页面"></a>启用分类和标签页面</h3><p>分类功能：执行<code>hexo new page categories</code>，然后修改生成的<code>source/categories/index.md</code>：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2017-01-30 19:16:17</span><br><span class="line">layout: "categories"</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>如果你需要关闭该页的评论，可以添加一行<code>comments: false</code>；<code>title</code>对应的则是该页的标题。</p><p>标签功能：同理，执行<code>hexo new page tags</code>，然后修改生成的<code>source/tags/index.md</code>：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2017-01-30 19:16:17</span><br><span class="line">layout: "tags"</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>配置同分类功能。</p><p>在菜单中添加链接：编辑主题的<code>_config.yml</code>，在<code>menu</code>中添加<code>Categories: /categories</code>和<code>Tags: /tags</code>，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  Home:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">  Archives:</span> <span class="string">/archives</span></span><br><span class="line"><span class="attr">  Categories:</span> <span class="string">/categories</span></span><br><span class="line"><span class="attr">  Tags:</span> <span class="string">/tags</span></span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="v1-2-0"><a href="#v1-2-0" class="headerlink" title="v1.2.0"></a>v1.2.0</h3><ul><li>增加<code>gitment</code>支持</li><li>移除多说</li></ul><h3 id="v1-1-0"><a href="#v1-1-0" class="headerlink" title="v1.1.0"></a>v1.1.0</h3><ul><li>增加对关闭文章评论的支持(<a href="https://github.com/CodeDaraW/Hacker/issues/14" target="_blank" rel="noopener">issue#14</a>)</li><li>增加对分类和标签的支持(<a href="https://github.com/CodeDaraW/Hacker/issues/7" target="_blank" rel="noopener">issue#7</a>)</li></ul><h3 id="v1-0-1"><a href="#v1-0-1" class="headerlink" title="v1.0.1"></a>v1.0.1</h3><ul><li>修复了主页上错误的评论链接</li></ul><h3 id="v1-0"><a href="#v1-0" class="headerlink" title="v1.0"></a>v1.0</h3><ul><li>修复从文件夹导致的 bug(<a href="https://github.com/CodeDaraW/Hacker/issues/10" target="_blank" rel="noopener">issue#10</a>)</li><li>修复<code>code</code>标签的显示效果</li></ul><h3 id="v0-3"><a href="#v0-3" class="headerlink" title="v0.3"></a>v0.3</h3><ul><li>重构 ejs 模板</li><li>改用 stylus</li><li>添加英文文档</li></ul><h3 id="v0-2"><a href="#v0-2" class="headerlink" title="v0.2"></a>v0.2</h3><ul><li>去除部分无用 css 和重复 css</li><li>修复无分类/标签依然出现 icon 的 bug</li><li>重写归档列表页面</li><li>修改代码块样式</li></ul><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><p>GNU GPL(General Public License) v2.0</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hacker-English-Docs&quot;&gt;&lt;a href=&quot;#Hacker-English-Docs&quot; class=&quot;headerlink&quot; title=&quot;Hacker | English Docs&quot;&gt;&lt;/a&gt;Hacker | &lt;a href=&quot;/README.m
      
    
    </summary>
    
    
      <category term="hexo-theme-Hacker" scheme="/tags/hexo-theme-Hacker/"/>
    
  </entry>
  
</feed>
